==================================================
#Old way of iterating through a list
def has_invalid_fields(fields):
    for field in fields:
        if field not in ['foo', 'bar']:
            return True
    return False

#Better Way
def has_invald_fields(fields):
    return bool(set(fields) - set(['foo', 'bar']))
==================================================
#Old way
def add_animal_in_family(species ,animal,family): 
    if family not in species:
        species[family] = set()
    species[family].add(animal)
    
species = {}
add_animal_in_family(species, 'cat', 'felidea')

#New Way ("Set" builds a new set each time we need it)
import collections
def add_animal_in_family(species, animal, family):
    species[family].add(animal)

#"Set" builds a new set each time we need it
species = collections.defaultdict(set)
add_animal_in_family( species, 'cat', 'felidea')
==================================================
#Multithreading issues in python
- Not problematic on a small scale, large
  amounts of memory issues at scale can be 
  observed
- Leads to race conditions, resource starvation
  at scale

#Alternative: Asyncio
==================================================